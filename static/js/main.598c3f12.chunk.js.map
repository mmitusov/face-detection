{"version":3,"sources":["components/faceRecognition/faceRecognition.js","components/navigation/navigation.js","components/signin/signin.js","components/register/register.js","components/logo/i.png","components/logo/logo.js","components/ImageLinkForm/ImageLinkForm.js","components/rank/rank.js","App.js","registerServiceWorker.js","index.js"],"names":["FaceRecognition","imageUrl","box","className","id","alt","src","width","heigh","style","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","Navigation","onRouteChange","isSignedIn","display","justifyContent","onClick","Signin","props","onEmailChange","event","setState","signInEmail","target","value","onPasswordChange","signInPassword","onSubmitSignIn","fetch","method","headers","body","JSON","stringify","email","state","password","then","response","json","user","loadUser","this","htmlFor","type","name","onChange","React","Component","Register","onNameChange","Logo","options","max","height","brain","paddingTop","ImageLinkForm","onInputChange","onButtonSubmit","Rank","entries","particlesOptions","particles","number","density","enable","value_area","initialState","input","route","joined","App","data","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","count","Object","assign","catch","err","console","log","params","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","render","URL","process","origin","addEventListener","status","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.598c3f12.chunk.js","sourcesContent":["import React from 'react';\r\nimport './faceRecognition.css';\r\n\r\nconst FaceRecognition = ({ imageUrl, box }) => {\r\n  return (\r\n    <div className='center ma' /*class .center should be definde in App.css, and without it 'bounding-box' doesn't work*/>\r\n      <div className='absolute mt2'>\r\n        <img id='inputimage' alt='' src={imageUrl} width='900px' heigh='auto'/>\r\n        <div className='bounding-box' style={{top: box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol}}></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FaceRecognition;","import React from 'react';\r\n\r\n//Если в системе - отображаем \"Выйти\", если не в системе - отображаем \"Логин, Регестрация\"\r\nconst Navigation = ({ onRouteChange, isSignedIn }) => {\r\n    if (isSignedIn) {\r\n      return (\r\n        <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n          <p onClick={() => onRouteChange('signout')} className='f3 link dim black underline pa3 pointer'>Sign Out</p>\r\n        </nav>\r\n      );\r\n    } else {\r\n      return (\r\n        <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n          <p onClick={() => onRouteChange('signin')} className='f3 link dim black underline pa3 pointer'>Sign In</p>\r\n          <p onClick={() => onRouteChange('register')} className='f3 link dim black underline pa3 pointer'>Register</p>\r\n        </nav>\r\n      );\r\n    }\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\n\r\nclass Signin extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      signInEmail: '',\r\n      signInPassword: ''\r\n    }\r\n  }\r\n\r\n  onEmailChange = (event) => {\r\n    this.setState({signInEmail: event.target.value})\r\n  }\r\n\r\n  onPasswordChange = (event) => {\r\n    this.setState({signInPassword: event.target.value})\r\n  }\r\n\r\n  onSubmitSignIn = () => {\r\n    fetch('https://gentle-headland-17092.herokuapp.com/signin', {\r\n      method: 'post',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify({\r\n        email: this.state.signInEmail,\r\n        password: this.state.signInPassword\r\n      })\r\n    })\r\n      .then(response => response.json())\r\n      .then(user => {\r\n        if (user.id) {\r\n          this.props.loadUser(user)\r\n          this.props.onRouteChange('home');\r\n        }\r\n      })\r\n  }\r\n\r\n  render() {\r\n    const { onRouteChange } = this.props;\r\n    return (\r\n      <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n        <main className=\"pa4 black-80\">\r\n          <div className=\"measure\">\r\n            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n              <legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\r\n              <div className=\"mt3\">\r\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                <input\r\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                  type=\"email\"\r\n                  name=\"email-address\"\r\n                  id=\"email-address\"\r\n                  onChange={this.onEmailChange}\r\n                />\r\n              </div>\r\n              <div className=\"mv3\">\r\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                <input\r\n                  className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  id=\"password\"\r\n                  onChange={this.onPasswordChange}\r\n                />\r\n              </div>\r\n            </fieldset>\r\n            <div className=\"\">\r\n              <input\r\n                onClick={this.onSubmitSignIn}\r\n                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\r\n                type=\"submit\"\r\n                value=\"Sign in\"\r\n              />\r\n            </div>\r\n            <div className=\"lh-copy mt3\">\r\n              <p  onClick={() => onRouteChange('register')} className=\"f6 link dim black db pointer\">Register</p>\r\n            </div>\r\n          </div>\r\n        </main>\r\n      </article>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Signin;","import React from 'react';\r\n\r\nclass Register extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: '',\r\n      password: '',\r\n      name: ''\r\n    }\r\n  }\r\n\r\n  onNameChange = (event) => {\r\n    this.setState({name: event.target.value})\r\n  }\r\n\r\n  onEmailChange = (event) => {\r\n    this.setState({email: event.target.value})\r\n  }\r\n\r\n  onPasswordChange = (event) => {\r\n    this.setState({password: event.target.value})\r\n  }\r\n\r\n  onSubmitSignIn = () => {\r\n    fetch('https://gentle-headland-17092.herokuapp.com/register', {\r\n      method: 'post',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify({\r\n        email: this.state.email,\r\n        password: this.state.password,\r\n        name: this.state.name\r\n      })\r\n    })\r\n      .then(response => response.json())\r\n      .then(user => {\r\n        if (user) {\r\n          this.props.loadUser(user)\r\n          this.props.onRouteChange('home');\r\n        }\r\n      })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n        <main className=\"pa4 black-80\">\r\n          <div className=\"measure\">\r\n            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n              <legend className=\"f1 fw6 ph0 mh0\">Register</legend>\r\n              <div className=\"mt3\">\r\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\r\n                <input\r\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  id=\"name\"\r\n                  onChange={this.onNameChange}\r\n                />\r\n              </div>\r\n              <div className=\"mt3\">\r\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                <input\r\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                  type=\"email\"\r\n                  name=\"email-address\"\r\n                  id=\"email-address\"\r\n                  onChange={this.onEmailChange}\r\n                />\r\n              </div>\r\n              <div className=\"mv3\">\r\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                <input\r\n                  className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  id=\"password\"\r\n                  onChange={this.onPasswordChange}\r\n                />\r\n              </div>\r\n            </fieldset>\r\n            <div className=\"\">\r\n              <input\r\n                onClick={this.onSubmitSignIn}\r\n                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\r\n                type=\"submit\"\r\n                value=\"Register\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </main>\r\n      </article>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Register;","export default __webpack_public_path__ + \"static/media/i.34f09704.png\";","import React from 'react';\r\nimport Tilt from 'react-tilt';\r\nimport brain from './i.png';\r\nimport './logo.css';\r\n\r\nconst Logo = () => {\r\n  return (\r\n    <div className='ma4 mt0'>\r\n      <Tilt className=\"Tilt br2 shadow-2\" options={{ max : 55 }} style={{ height: 150, width: 150 }} >\r\n        <div className=\"Tilt-inner pa3\">\r\n          <img src={brain} style={{paddingTop: '5px'}} alt='logo' />\r\n        </div>\r\n      </Tilt>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\nimport './ImageLinkForm.css';\r\n\r\nconst ImageLinkForm = ({ onInputChange, onButtonSubmit }) => {\r\n  return (\r\n    <div>\r\n      <p className='f3'>\r\n        {'Want to detect face on your Image? Give it a try!'}\r\n      </p>\r\n      <div className='center'>\r\n        <div className='form center pa4 br3 shadow-5'>\r\n          <input type='text' className='f4 pa2 w-70 center' onChange={onInputChange}/>\r\n          <button className='w-30 grow f4 link ph3 pv2 dib white bg-light-purple' onClick={onButtonSubmit}>Detect</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImageLinkForm;","import React from 'react';\r\n\r\nconst Rank = ({ name, entries }) => {\r\n  return (\r\n    <div>\r\n      <div className='dark-blue f3'>\r\n        {`${name}, your current entry count is `}\r\n      </div>\r\n      <div className='white f1'>\r\n        {entries}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Rank;","import React, { Component } from 'react';\r\nimport Particles from 'react-particles-js';\r\n// import Clarifai from 'clarifai';\r\nimport FaceRecognition from './components/faceRecognition/faceRecognition';\r\nimport Navigation from './components/navigation/navigation';\r\nimport Signin from './components/signin/signin';\r\nimport Register from './components/register/register';\r\nimport Logo from './components/logo/logo';\r\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\r\nimport Rank from './components/rank/rank';\r\nimport './App.css';\r\n\r\n// import Clarifai from 'clarifai'; <--- It was moved into image.js on the backend\r\n\r\n// //You must add your own API key here from Clarifai. API key was moved into image.js on the backend due to the safety rysons\r\n// const app = new Clarifai.App({\r\n//  apiKey: 'e1e29699a6504336ae0ffa788524d16a'\r\n// });\r\n\r\nconst particlesOptions = {\r\n  particles: {\r\n    number: {\r\n      value: 80,\r\n      density: {\r\n        enable: true,\r\n        value_area: 1000\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst initialState = {\r\n      input: \"\",\r\n      imageUrl: \"\",\r\n      box: {},\r\n      route: 'signin',\r\n      isSignedIn: false,\r\n      user: {\r\n        id: '',\r\n        name: '',\r\n        email: '',\r\n        entries: 0,\r\n        joined: ''\r\n      }\r\n    }\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = initialState;\r\n  }\r\n\r\n  loadUser = (data) => {\r\n    this.setState({\r\n      user: {\r\n        id: data.id,\r\n        name: data.name,\r\n        email: data.email,\r\n        entries: data.entries,\r\n        joined: data.joined\r\n    }})\r\n  }\r\n\r\n  calculateFaceLocation = (data) => {\r\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\r\n    const image = document.getElementById('inputimage');\r\n    const width = Number(image.width);\r\n    const height = Number(image.height);\r\n    // console.log(widthNum, heightNum); ---> Just checking if everything works\r\n    return {\r\n      leftCol: clarifaiFace.left_col * width,\r\n      topRow: clarifaiFace.top_row * height,\r\n      rightCol: width - (clarifaiFace.right_col * width),\r\n      bottomRow: height - (clarifaiFace.bottom_row * height)\r\n    }\r\n  }\r\n\r\n  displayFaceBox = (box) => {\r\n    // console.log(box); ---> Just checking if everything works\r\n    this.setState({box: box});\r\n  }\r\n\r\n  onInputChange = (event) => {\r\n    this.setState({input: event.target.value});\r\n  }\r\n\r\n  onButtonSubmit = () => {\r\n    this.setState({imageUrl: this.state.input});\r\n    fetch('https://gentle-headland-17092.herokuapp.com/imageurl', {\r\n          method: 'post',\r\n          headers: {'Content-Type': 'application/json'},\r\n          body: JSON.stringify({\r\n            input: this.state.input\r\n          })\r\n        })\r\n    .then(response => response.json())\r\n    .then(response => {\r\n        if (response) {\r\n          fetch('https://gentle-headland-17092.herokuapp.com/image', {\r\n            method: 'put',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n              id: this.state.user.id\r\n            })\r\n          })\r\n            .then(response => response.json())\r\n            .then(count => {\r\n              this.setState(Object.assign(this.state.user, { entries: count}))\r\n            })\r\n\r\n        }\r\n        this.displayFaceBox(this.calculateFaceLocation(response))\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  onRouteChange = (route) => {\r\n    if (route === 'signout') {\r\n      this.setState({isSignedIn: false})\r\n    } else if (route === 'home') {\r\n      this.setState({isSignedIn: true})\r\n    }\r\n    this.setState({route: route});\r\n  }\r\n\r\n  render() {\r\n    const { isSignedIn, imageUrl, route, box } = this.state;\r\n    return (\r\n      <div className=\"App\">\r\n        <Particles className='particles' params={particlesOptions} />\r\n        <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange} />\r\n        { route === 'home'\r\n          ? <div>\r\n              <Logo />\r\n              <Rank name={this.state.user.name} entries={this.state.user.entries} />\r\n              <ImageLinkForm onInputChange={this.onInputChange} onButtonSubmit={this.onButtonSubmit} />\r\n              <FaceRecognition box={box} imageUrl={imageUrl} />\r\n            </div>\r\n          : (\r\n             route === 'signin'\r\n             ? <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\r\n             : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\r\n            )\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\nimport 'tachyons';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n\r\n"],"sourceRoot":""}